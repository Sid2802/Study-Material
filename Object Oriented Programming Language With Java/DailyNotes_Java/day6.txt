--to run the project
   rt project ---run --java project 
  
=============
Validations

	private int accNo;
	private String accHolderName;
	private double balance;

1 accNo  > 0
2 accHolderName  : priti123
3 balance  > 0   				<=100000

---multiple classes
College
	private String name;
	private char grade;
	private String address;
	private String contactNo;
	
	para const
	toString()

Stream
	private String type;
	private int fees;
	private int noOfStudents;

	para const
	toString()

TestCollege
	main method
	create an obj
	call the methods
==========================
Function Overriding
  the same function is present in the parent and the child class with the same signature


					Shape
					| void calArea(String shape, int a, int b)
					| display(), fun1()
					|
				   Rectangle
					|   void calArea(String shape, int a, int b), display()

====
--final
final variable 
	stops change the value of the variable
	final double PI=3.14;

final method
	stops overriding the method

final class
	stops overriding inheritance

=====
1. Static variable
2. Static method
3. Static block

--Static variable
   there will be only 1 copy created for Static variable
   which shared among all the objects
    it is class level variable 
    global variables



				StaticVarDemo
					 | num=1   -> static
					 | private int a, b;   //mv
		---------------------------------------------------------
		|					|				|
		obj1					obj2				obj3
		a=10				a=11			a=12
		b=20				b=21			b=22


--diff in mv and static variables
mv :  every object will have his own copy of mv
static variables : has 1 copy per class  : eg attendance sheet

--final + static
static final double PI=3.14;
static final double RATE=0.10;
static final int IFSC=400098;


--static block
it is used to initialize the static data members
executed before the main method, when we load the class
no need to call the block , using an object
it is called auto

	static double PI;
	static double TAX;
	static int IFSC;
	
	static {
		PI=3.14;  //initialize
		TAX=0.10;
		IFSC=87878;
	}

--static method 
is declared as static keyword
static method can access only static variables
class level
no need to create an object to call the static method

=======================================
--abstract classes:
it is used in inheritance
It can have abstract and non-abstract methods (method with the body).
An abstract class may have static fields and static methods, constructors
enforce method overriding 

--abstraction(hiding) can be done using
1. Abstract class (0 to 100%)
2. Interface (100%) (all the methods are abstract)

An abstract class must be declared with an abstract keyword.
It cannot be instantiated.

--why abstract class?
You want to share code among several closely related classes.
common methods or fields to be shared among different classes
					Animal					<--abstract class		
					  | mv: legs=4	
				          | mf : sound() 			< --- abstract method
					  | mf : classInfo(){.....}		< --non abstract method
			-------------------------------------------
			|						|
			Dog						Lion			
			legs						legs
			classInfo(){.....}			classInfo(){.....}	
			 sound() {..}				 sound() {..}


--eg

						Account
						 | mv : accNo, accHolderName, bal
						 |  mf : withdras(), transfer(), deposit()  < --non  abstract method
						 | calInterest(double roi), checkLimit() < --- abstract method
						|
			-----------------------------------
			|					|				
		  SavingAccount		  CurrentAccount		

					Shape
					  |  mf : calArea(), calPeri() < --- abstract method
					  |
			--------------------------------------
			|						|
			square				rect

						Software
						  | install() , uninstall() < --- abstract method
				----------------------------------------------
				|							|
		ApplicationSoftware				ProgSoftware

						Vehicle
						   | mf: driving() , addFuel() < --- abstract method
						   |
			----------------------------------------------------------
			|					|				|
		2Wheeler				3Wheeler				4Wheeler	
							
=============================
--has a relationship
Address
     String city, state, country;

Emp
    int id;
    String name;
    Address address;



















						
				
	

















